//Provide rounded corners
.rounded {
  border-radius: 50%
}

.rounded {
   border-radius:10px;
}

//Creating a submit button and not input type submit button
<button type="submit">Submit</button>

<lable>
<input type="radio" name="indoor-outdoor" > //No closing tag here
</label>

padding margin works in clockwise manner
top right bottom left

CSS is read from top to bottom
eg 
pink-text {
}

blue-text {
} //Blue Text will always override the pink text no matter how use the style in page

But #id styles and inline styles override the above
a particular attribute can assert its influence, by calling itself as !important
eg 
pink-text {
  color: pink !important; //Overrides everything the master stroke
}

color : RGB; can use 2 digits for each color
color : rgb(0,0,0);
or only one digit
eg #F00


//Select the second child from the array
$(".target:nth-child(2)").css(); 
$(".target:even").css();
$(".target:odd").css();

//Array map method
The map method is a convenient way to iterate through arrays. Here's an example usage:
var timesFour = oldArray.map(function(val){
  return val * 4;
});

The map method will iterate through every element of the array, creating a new array with values that have been modified by the callback function, and return it.

//Array Reduce method`
The array method reduce is used to iterate through an array and condense it into one value.
To use reduce you pass in a callback whose arguments are an accumulator (in this case, previousVal) and the current value (currentVal).
//reduce has an optional second argument which can be used to set the initial value of the accumulator. 
//If no initial value is specified it will be the first array element and currentVal will start with the second array element.

Here is an example of reduce being used to subtract all the values of an array:

var singleVal = array.reduce(function(previousVal, currentVal) {

  return previousVal - currentVal;

}, 0);

Array.filter
Array.concat
