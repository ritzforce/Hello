//Provide rounded corners
.rounded {
  border-radius: 50%
}

.rounded {
   border-radius:10px;
}

//Creating a submit button and not input type submit button
<button type="submit">Submit</button>

<lable>
<input type="radio" name="indoor-outdoor" > //No closing tag here
</label>

padding margin works in clockwise manner
top right bottom left

CSS is read from top to bottom
eg 
pink-text {
}

blue-text {
} //Blue Text will always override the pink text no matter how use the style in page

But #id styles and inline styles override the above
a particular attribute can assert its influence, by calling itself as !important
eg 
pink-text {
  color: pink !important; //Overrides everything the master stroke
}

color : RGB; can use 2 digits for each color
color : rgb(0,0,0);
or only one digit
eg #F00


//Select the second child from the array
$(".target:nth-child(2)").css(); 
$(".target:even").css();
$(".target:odd").css();

margin {0 auto;} //Center align a block element eg a table in a div
the above technique can be used to center align a column of width = 6

<div class="row">
  <div class="col-lg-6" style="margin:0 auto;float:none;">
    Hi
  </div>
</div>

Media queries is a css technology that allows css styles to be applied based on the viewport size
eg pseudo code
@media screen (min-width:600px) {
  //CSS style that are only applicable if the width exceeds 600px 
}

//Actual 
@media (min-width:1200px) {
  .container {
    width:1170px;
  }
}

A viewport meta tag means the screen width is set to device width, and the content is rendered taking this into consideration.
<div class="col-xs-12 col-sm-5">
 //Occupy 12 on small screen size but only 5 in large screen sizes
</div>
<div class="col-xs-12" col-sm-7">
  7 columsn on the right
</div>

//Reverse content on large screen using push and pull
<div class="col-xs-12 col-sm-5 col-sm-push-7">
  Push to the right
</div>
<div class="col-xs-12 col-sm-7 col-sm-pull-5">
  Push to the left
</div>

<div class="col-xs-12 col-sm-4 col-sm-offset-1">
  Offset by 1  Note the sum is 11 and 1 we have provided by offset
</div>
<div class="col-xs-12 col-sm-7 col-sm-pull-5">
  Push to the left
</div>

http://www.helloerik.com/the-subtle-magic-behind-why-the-bootstrap-3-grid-works

