<html>
<head>
<script>

function sym(args) {
  var allArray = Array.prototype.slice.call(arguments);
  //console.log("------------------");
  //console.log(allArray);  
  return allArray.reduce(function(prev,next,index){
    var newArray = prev.concat(next);
	
	var filter1 = next.filter(function(item){
        if(prev.indexOf(item) == -1){
          return true;
        }
		return false;
    });
	var filter2 = prev.filter(function(item){
	  if(next.indexOf(item) == -1) {
	    return true;
	  }
	  return false;
	});
    
	return filter1.concat(filter2);;
	
  });
}

console.log("Result--" + sym([1, 2, 3], [5, 2, 1, 4]));


/*
function inventory(arr1, arr2) {
    // All inventory must be accounted for or you're fired!
  var newArr = [];  
  arr2.forEach(function(newItem){
       var isFound = false;
       for(var i = 0; i < arr1.length;i++){
         var currentItem = arr1[i];
         
		 console.log("CurrenItem-->" + currentItem);
		 
		 if(currentItem[1] === newItem[1]){
		   console.log("NewItem-->" + newItem);
		   
           currentItem[0] += newItem[0];
           isFound = true;
           break;
         }
       }
       if(isFound === false){
         newArr.push(newItem);
       }
    });
    console.log(newArr);
  
    return arr1.concat(newArr);
}*

// Example inventory lists
var curInv = [
    [21, "Bowling Ball"],
    [2, "Dirty Sock"],
];

var newInv = [
    [67, "Bowling Ball"],
    [7, "Toothpaste"]
];

console.log("Result->" + inventory(curInv, newInv));
*/

/*
function where(arr, num) {
  // Find my place in this sorted array.
  arr = arr.sort(function(a,b) {
     return a - b;
  });
  console.log(arr);
  
  for(var i = 0; i < arr.length;i++) {
    console.log(i)
	console.log(arr[i]);
    if(arr[i] >= num) {
      return i;
    }
  }
  return arr.length;
}
/*
var result = where([5, 3, 20, 3], 5);
console.log(result);
*/
/*
function unite() {
   var args = Array.prototype.slice.call(arguments);
  
  var concatArray = args.reduce(function(prev,current){
     
	 var filtered = current.filter(function(val){
	     
		 for(var i = 0; i < prev.length;i++) {
		    if(prev[i] == val) {
			  return false;
			}
		 }
		 return true;
	 });
     console.log(filtered);
	 
   	return prev.concat(filtered);
  },[]); 
  console.log(concatArray);
  return concatArray;
}

unite([1, 3, 2], [5, 2, 1, 4], [2, 1]);

if(navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(function(position){
	console.log(position.coords.latitude);
	console.log(position.coords.longitude);
  });
}
*/

 </script>  
</head>
<body>
</body>


</html>